// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "ExportBitwardenDistributionDomain": Object {
      "Export": Object {
        "Name": "BitwardenDistributionDomain",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Distribution830FAC52",
          "DomainName",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "4a575666d1c2c6412590d2a56f328e040a81ad1ef59aecee31ae9b393d05f659.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminDefaultService4E310903": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "AdminDefaultServiceCloudmapServiceB4AEA7DE",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "AdminTaskDefinition614B89E8",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AdminDefaultServiceCloudmapServiceB4AEA7DE": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.admin.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AdminDummyServiceDummyInstance2582E8CD": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testAdminDummyServiceDummyInstance60CBEDCB",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "AdminDummyServiceF1F200CF",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "AdminDummyServiceF1F200CF": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "admin.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AdminTaskDefinition614B89E8": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/admin/login/ || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/admin:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "admin",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "admin",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/admin/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "admin",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AdminVirtualNodeF558BB1B",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "admin",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AdminTaskExecutionRole8F72DC70",
            "Arn",
          ],
        },
        "Family": "testAdminTaskDefinitionDFE8BF7C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AdminTaskRole2BC76FC7",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AdminTaskExecutionRole8F72DC70": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminTaskExecutionRoleDefaultPolicy74608197": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AdminTaskExecutionRoleDefaultPolicy74608197",
        "Roles": Array [
          Object {
            "Ref": "AdminTaskExecutionRole8F72DC70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AdminTaskRole2BC76FC7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminVirtualNodeF558BB1B": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "email-smtp.us-west-2.amazonaws.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "AdminDefaultServiceCloudmapServiceB4AEA7DE",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "admin-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "AdminVirtualRouter6FB256A1": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testAdminVirtualRouter156DE91B",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "AdminVirtualRouterDefaultRouteF827C58D": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "AdminVirtualNodeF558BB1B",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "AdminVirtualRouter6FB256A1",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "AdminVirtualServiceD2E98B99": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "AdminVirtualRouter6FB256A1",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "admin.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "ApiDefaultService62A54633": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "ApiDefaultServiceCloudmapService56BAB846",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "ApiTaskDefinitionFA71DA57",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ApiDefaultServiceCloudmapService56BAB846": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.api.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "ApiDummyServiceD2BADA70": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "api.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "ApiDummyServiceDummyInstance5C3F3C59": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testApiDummyServiceDummyInstanceE2A322EC",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "ApiDummyServiceD2BADA70",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "ApiTaskDefinitionFA71DA57": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/api:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "api",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "api",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/api/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "api",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "ApiVirtualNode02AB6498",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "api",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiTaskExecutionRole5F8702D7",
            "Arn",
          ],
        },
        "Family": "testApiTaskDefinition91DBB219",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiTaskRoleF3CEB421",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ApiTaskExecutionRole5F8702D7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiTaskExecutionRoleDefaultPolicy2E4C720E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiTaskExecutionRoleDefaultPolicy2E4C720E",
        "Roles": Array [
          Object {
            "Ref": "ApiTaskExecutionRole5F8702D7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiTaskRoleF3CEB421": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiVirtualNode02AB6498": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "email-smtp.us-west-2.amazonaws.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "ApiDefaultServiceCloudmapService56BAB846",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "api-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "ApiVirtualRouterC29706E9": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testApiVirtualRouter69D1A9CB",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "ApiVirtualRouterDefaultRoute7040E65C": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "ApiVirtualNode02AB6498",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "ApiVirtualRouterC29706E9",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "ApiVirtualService0B2433C3": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "ApiVirtualRouterC29706E9",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "api.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "AppCluster5466C70E": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "AppCluster68CC0559": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "AppClusterDefaultServiceDiscoveryNamespaceD10811B1": Object {
      "Properties": Object {
        "Name": "bitwarden.local",
        "Vpc": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "AppLogGroupC72EEC8C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AppMesh01F34EF4": Object {
      "Properties": Object {
        "MeshName": "Bitwarden",
        "Spec": Object {
          "EgressFilter": Object {
            "Type": "ALLOW_ALL",
          },
        },
      },
      "Type": "AWS::AppMesh::Mesh",
    },
    "AppSecurityGroupC292657D": Object {
      "Properties": Object {
        "GroupDescription": "test/App/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AppSecurityGroupfromtestAppSecurityGroup9C91FB905000AEDB2A83": Object {
      "Properties": Object {
        "Description": "from testAppSecurityGroup9C91FB90:5000",
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AppSecurityGroupC292657D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AppSecurityGroupC292657D",
            "GroupId",
          ],
        },
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AppSecurityGroupfromtestGatewayServiceSecurityGroup22E0A34E500061FDEAB4": Object {
      "Properties": Object {
        "Description": "from testGatewayServiceSecurityGroup22E0A34E:5000",
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AppSecurityGroupC292657D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GatewayServiceSecurityGroupBF5A4109",
            "GroupId",
          ],
        },
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AttachmentsAccessPointDEFCCB32": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "PosixUser": Object {
          "Gid": "1000",
          "Uid": "1000",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1000",
            "OwnerUid": "1000",
            "Permissions": "0755",
          },
          "Path": "/bitwarden/core/attachments",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "AttachmentsDefaultService32C7F8C4": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "AttachmentsDefaultServiceCloudmapService03AC2A5A",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "AttachmentsTaskDefinition9D5550A6",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AttachmentsDefaultServiceCloudmapService03AC2A5A": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.attachments.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AttachmentsDummyServiceA6C26A57": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "attachments.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AttachmentsDummyServiceDummyInstance57E3ACD0": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testAttachmentsDummyServiceDummyInstance22DB02C6",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "AttachmentsDummyServiceA6C26A57",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "AttachmentsTaskDefinition9D5550A6": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/attachments:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "attachments",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core/attachments",
                "ReadOnly": true,
                "SourceVolume": Object {
                  "Ref": "AttachmentsAccessPointDEFCCB32",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "attachments",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/attachments/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "attachments",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AttachmentsVirtualNode708C65E7",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "attachments",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AttachmentsTaskExecutionRole73161977",
            "Arn",
          ],
        },
        "Family": "testAttachmentsTaskDefinitionE843F3FB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AttachmentsTaskRole3BCDA21D",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "AttachmentsAccessPointDEFCCB32",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "AttachmentsAccessPointDEFCCB32",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AttachmentsTaskExecutionRole73161977": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AttachmentsTaskExecutionRoleDefaultPolicy30FA8016": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AttachmentsTaskExecutionRoleDefaultPolicy30FA8016",
        "Roles": Array [
          Object {
            "Ref": "AttachmentsTaskExecutionRole73161977",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AttachmentsTaskRole3BCDA21D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AttachmentsVirtualNode708C65E7": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "AttachmentsDefaultServiceCloudmapService03AC2A5A",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "attachments-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "AttachmentsVirtualRouterBD5D87DB": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testAttachmentsVirtualRouterBDD0570E",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "AttachmentsVirtualRouterDefaultRoute0A89F3B2": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "AttachmentsVirtualNode708C65E7",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "AttachmentsVirtualRouterBD5D87DB",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "AttachmentsVirtualServiceCA8772FF": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "AttachmentsVirtualRouterBD5D87DB",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "attachments.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "BitwardenOriginWafOriginCustomHeaderValueCB6FF1BE": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "[Bitwarden] CloudFront origin custom header",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "PasswordLength": 50,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "BitwardenOriginWafWebACL55C5C038": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Description": "Allow from CloudFront",
        "Rules": Array [
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "VerifyCloudFrontOriginCustomHeaderRule",
            "Priority": 0,
            "Statement": Object {
              "NotStatement": Object {
                "Statement": Object {
                  "ByteMatchStatement": Object {
                    "FieldToMatch": Object {
                      "SingleHeader": Object {
                        "name": "X-Pre-Shared-Key",
                      },
                    },
                    "PositionalConstraint": "EXACTLY",
                    "SearchString": Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "{{resolve:secretsmanager:",
                          Object {
                            "Ref": "BitwardenOriginWafOriginCustomHeaderValueCB6FF1BE",
                          },
                          ":SecretString:::}}",
                        ],
                      ],
                    },
                    "TextTransformations": Array [
                      Object {
                        "Priority": 0,
                        "Type": "NONE",
                      },
                    ],
                  },
                },
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "VerifyCloudFrontOriginCustomHeaderRule",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "Bitwarden-Origin-WebACL",
          "SampledRequestsEnabled": false,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "BitwardenOriginWafWebACLAssociationCAD4BEB6": Object {
      "Properties": Object {
        "ResourceArn": Object {
          "Ref": "LoadBalancerBE9EEC3A",
        },
        "WebACLArn": Object {
          "Fn::GetAtt": Array [
            "BitwardenOriginWafWebACL55C5C038",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "CoreAccessPoint2A4FF513": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "PosixUser": Object {
          "Gid": "1000",
          "Uid": "1000",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1000",
            "OwnerUid": "1000",
            "Permissions": "0755",
          },
          "Path": "/bitwarden/core",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "DatabaseDefaultVirtualNode574DA26A": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "TCP": Object {
                  "MaxConnections": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 1433,
                "Protocol": "tcp",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "DNS": Object {
              "Hostname": Object {
                "Fn::GetAtt": Array [
                  "DatabaseVirtualService025456E2",
                  "VirtualServiceName",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "testDatabaseDefaultVirtualNode8BE8B0C9",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "DatabaseInstance24D16791": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.small",
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseInstanceSubnetGroupA4FFF2A4",
        },
        "EnablePerformanceInsights": true,
        "Engine": "sqlserver-ex",
        "EngineVersion": "15.00",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "testDatabaseInstanceSecret7C71F07D3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "sa",
        "PerformanceInsightsRetentionPeriod": 7,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "DatabaseInstanceSecurityGroup8BDF0112",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DatabaseInstanceSecretAttachmentF5C7BAE8": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "testDatabaseInstanceSecret7C71F07D3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "DatabaseInstance24D16791",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseInstanceSecurityGroup8BDF0112": Object {
      "Properties": Object {
        "GroupDescription": "Security group for DatabaseInstance database",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseInstanceSecurityGroupfromtestAppSecurityGroup9C91FB90IndirectPort79DC75A7": Object {
      "Properties": Object {
        "Description": "from testAppSecurityGroup9C91FB90:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseInstance24D16791",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseInstanceSecurityGroup8BDF0112",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AppSecurityGroupC292657D",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseInstance24D16791",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseInstanceSecurityGroupfromtestDefaultDatabaseCreateDatabaseFunctionSecurityGroup216B2C1A14337B3D2FE5": Object {
      "Properties": Object {
        "Description": "from testDefaultDatabaseCreateDatabaseFunctionSecurityGroup216B2C1A:1433",
        "FromPort": 1433,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseInstanceSecurityGroup8BDF0112",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DefaultDatabaseCreateDatabaseFunctionSecurityGroup3D6A34B1",
            "GroupId",
          ],
        },
        "ToPort": 1433,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseInstanceSubnetGroupA4FFF2A4": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DatabaseInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DatabaseVirtualRouterDefaultRoute85A73CD0": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "TcpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "DatabaseDefaultVirtualNode574DA26A",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "DatabaseVirtualRouterFB26BD0A",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "DatabaseVirtualRouterFB26BD0A": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 1433,
                "Protocol": "tcp",
              },
            },
          ],
        },
        "VirtualRouterName": "testDatabaseVirtualRouterA5915B4F",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "DatabaseVirtualService025456E2": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "DatabaseVirtualRouterFB26BD0A",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": Object {
          "Fn::GetAtt": Array [
            "DatabaseInstance24D16791",
            "Endpoint.Address",
          ],
        },
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "DefaultDatabase": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DatabaseName": "vault",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DefaultDatabaseCreateDatabaseFunction1BF18CAA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultDatabaseCreateDatabaseFunction1BF18CAA": Object {
      "DependsOn": Array [
        "DefaultDatabaseCreateDatabaseFunctionServiceRoleDefaultPolicyB56000B7",
        "DefaultDatabaseCreateDatabaseFunctionServiceRoleB785D055",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "37ee9b4044638d9f5194615814755ba2ac5bb0ee4c8f517647dae6572273b2cd.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DB_SECRET_ARN": Object {
              "Ref": "DatabaseInstanceSecretAttachmentF5C7BAE8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DefaultDatabaseCreateDatabaseFunctionServiceRoleB785D055",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DefaultDatabaseCreateDatabaseFunctionSecurityGroup3D6A34B1",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
            },
            Object {
              "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
            },
            Object {
              "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DefaultDatabaseCreateDatabaseFunctionSecurityGroup3D6A34B1": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function testDefaultDatabaseCreateDatabaseFunction6FDB723B",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DefaultDatabaseCreateDatabaseFunctionServiceRoleB785D055": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultDatabaseCreateDatabaseFunctionServiceRoleDefaultPolicyB56000B7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseInstanceSecretAttachmentF5C7BAE8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultDatabaseCreateDatabaseFunctionServiceRoleDefaultPolicyB56000B7",
        "Roles": Array [
          Object {
            "Ref": "DefaultDatabaseCreateDatabaseFunctionServiceRoleB785D055",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Distribution830FAC52": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.css",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.png",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.svg",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.woff",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.woff2",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.js",
              "TargetOriginId": "testDistributionOrigin1F4407531",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": "Bitwarden",
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "testDistributionOrigin1F4407531",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "HTTPPort": 8080,
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "LoadBalancerBE9EEC3A",
                  "DNSName",
                ],
              },
              "Id": "testDistributionOrigin1F4407531",
              "OriginCustomHeaders": Array [
                Object {
                  "HeaderName": "X-Pre-Shared-Key",
                  "HeaderValue": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "{{resolve:secretsmanager:",
                        Object {
                          "Ref": "BitwardenOriginWafOriginCustomHeaderValueCB6FF1BE",
                        },
                        ":SecretString:::}}",
                      ],
                    ],
                  },
                },
              ],
            },
          ],
          "WebACLId": "arn:aws:wafv2:us-east-1:983035974902:global/webacl/BitwardenWebACL-NlsvLO3PmG33/913b80be-ecfa-4c3f-9254-a82f6f536879",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DuoAKey23F55117": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "[Bitwarden] A randomly generated Duo akey.",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "PasswordLength": 64,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "EmailDefaultVirtualNode6EC8A0F3": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "TCP": Object {
                  "MaxConnections": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 587,
                "Protocol": "tcp",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "DNS": Object {
              "Hostname": Object {
                "Fn::GetAtt": Array [
                  "EmailVirtualServiceB65FCD74",
                  "VirtualServiceName",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "testEmailDefaultVirtualNodeCC7C1FE5",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "EmailVirtualRouter0A0ECB11": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 587,
                "Protocol": "tcp",
              },
            },
          ],
        },
        "VirtualRouterName": "testEmailVirtualRouterAD7731BC",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "EmailVirtualRouterDefaultRoute6DDC4296": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "TcpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "EmailDefaultVirtualNode6EC8A0F3",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "EmailVirtualRouter0A0ECB11",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "EmailVirtualServiceB65FCD74": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "EmailVirtualRouter0A0ECB11",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "email-smtp.us-west-2.amazonaws.com",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "EventsDefaultServiceB793A33C": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "EventsDefaultServiceCloudmapService3D362089",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "EventsTaskDefinitionDDB3984C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EventsDefaultServiceCloudmapService3D362089": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.events.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "EventsDummyService5BA39EF1": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "events.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "EventsDummyServiceDummyInstanceB1606DC1": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testEventsDummyServiceDummyInstance3E70572C",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "EventsDummyService5BA39EF1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "EventsTaskDefinitionDDB3984C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/events:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "events",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "events",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/events/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "events",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "EventsVirtualNode88D48450",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "events",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "EventsTaskExecutionRole3A73A5DA",
            "Arn",
          ],
        },
        "Family": "testEventsTaskDefinitionC9676F82",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "EventsTaskRole3CAB226D",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EventsTaskExecutionRole3A73A5DA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EventsTaskExecutionRoleDefaultPolicy0E5158ED": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EventsTaskExecutionRoleDefaultPolicy0E5158ED",
        "Roles": Array [
          Object {
            "Ref": "EventsTaskExecutionRole3A73A5DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EventsTaskRole3CAB226D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EventsVirtualNode88D48450": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "email-smtp.us-west-2.amazonaws.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "push.bitwarden.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "EventsDefaultServiceCloudmapService3D362089",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "events-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "EventsVirtualRouter37B8460E": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testEventsVirtualRouter2D134BCD",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "EventsVirtualRouterDefaultRoute4000557E": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "EventsVirtualNode88D48450",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "EventsVirtualRouter37B8460E",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "EventsVirtualService07F2586B": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "EventsVirtualRouter37B8460E",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "events.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "FileSystem8A8E25C0": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Encrypted": true,
        "FileSystemTags": Array [
          Object {
            "Key": "Name",
            "Value": "test/FileSystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "FileSystemEfsMountTarget1586453F0": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FileSystemEfsSecurityGroup212D3ACB",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "FileSystemEfsMountTarget24B8EBB43": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FileSystemEfsSecurityGroup212D3ACB",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "FileSystemEfsMountTarget37C2F9139": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FileSystemEfsSecurityGroup212D3ACB",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "FileSystemEfsSecurityGroup212D3ACB": Object {
      "Properties": Object {
        "GroupDescription": "test/FileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/FileSystem",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FileSystemEfsSecurityGroupfromtestAppSecurityGroup9C91FB90204951DA0D5B": Object {
      "Properties": Object {
        "Description": "from testAppSecurityGroup9C91FB90:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FileSystemEfsSecurityGroup212D3ACB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AppSecurityGroupC292657D",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FileSystemEfsSecurityGroupfromtestIdentityServerCertificateBuildProjectSecurityGroup5559DDBF20499296A7E1": Object {
      "Properties": Object {
        "Description": "from testIdentityServerCertificateBuildProjectSecurityGroup5559DDBF:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FileSystemEfsSecurityGroup212D3ACB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "IdentityServerCertificateBuildProjectSecurityGroupE5E785CC",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GatewayService5E8511BF": Object {
      "DependsOn": Array [
        "LoadBalancerListnerappidRule9910DCC2",
        "LoadBalancerListnerA3235EC5",
      ],
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "envoy",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "TargetGroup3D7CD9B8",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "GatewayServiceSecurityGroupBF5A4109",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "envoy",
            "ContainerPort": 8080,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "GatewayServiceCloudmapService20AEB51A",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "GatewayTaskDefinitionFE83CD0E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "GatewayServiceCloudmapService20AEB51A": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "gateway",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "GatewayServiceSecurityGroupBF5A4109": Object {
      "Properties": Object {
        "GroupDescription": "test/Gateway/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GatewayServiceSecurityGroupfromtestLoadBalancerSecurityGroupDD22F5808080E5D91A27": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GatewayServiceSecurityGroupBF5A4109",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerSecurityGroupA28D6DD7",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GatewayServiceSecurityGroupfromtestLoadBalancerSecurityGroupDD22F58099014AD2A324": Object {
      "Properties": Object {
        "Description": "for HealthCheck",
        "FromPort": 9901,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GatewayServiceSecurityGroupBF5A4109",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerSecurityGroupA28D6DD7",
            "GroupId",
          ],
        },
        "ToPort": 9901,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GatewayTaskDefinitionFE83CD0E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 208,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualGateway/",
                      Object {
                        "Fn::GetAtt": Array [
                          "GatewayVirtualGatewayDD1BDA9D",
                          "VirtualGatewayName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 60,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "gateway",
              },
            },
            "Memory": 320,
            "Name": "envoy",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 9901,
                "Protocol": "tcp",
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "gateway",
              },
            },
            "MemoryReservation": 128,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}}}",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "gateway",
              },
            },
            "MemoryReservation": 64,
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "GatewayTaskExecutionRoleE43F4916",
            "Arn",
          ],
        },
        "Family": "testGatewayTaskDefinition079AD5EF",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "GatewayTaskRole2822BEB9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GatewayTaskExecutionRoleDefaultPolicy8EEF99D2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GatewayTaskExecutionRoleDefaultPolicy8EEF99D2",
        "Roles": Array [
          Object {
            "Ref": "GatewayTaskExecutionRoleE43F4916",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GatewayTaskExecutionRoleE43F4916": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayTaskRole2822BEB9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayVirtualGateway454E53D7": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayA652AD07",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "WebVirtualService8E478A2D",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayDD1BDA9D": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 8080,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
        },
        "VirtualGatewayName": "gateway",
      },
      "Type": "AWS::AppMesh::VirtualGateway",
    },
    "GatewayVirtualGatewayadmin05121E7C": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayadminCB38F30D",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Rewrite": Object {
                "Prefix": Object {
                  "Value": "/admin/",
                },
              },
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "AdminVirtualServiceD2E98B99",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/admin/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayapi415ACC78": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayapi032EC100",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "ApiVirtualService0B2433C3",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/api/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayattachmentsFDEFEBBF": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayattachments605DE28F",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "AttachmentsVirtualServiceCA8772FF",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/attachments/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayevents11DF71CB": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayevents8778A4F3",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "EventsVirtualService07F2586B",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/events/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayicons0B634B6E": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayicons834DF0C7",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "IconsVirtualService4A2842F5",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/icons/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayidentityF313E7A9": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayidentity85640366",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Rewrite": Object {
                "Prefix": Object {
                  "Value": "/identity/",
                },
              },
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "IdentityVirtualService0981AD18",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/identity/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewaynotificationsD66EF1A3": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewaynotificationsA2463DDB",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "NotificationsVirtualService853F0457",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/notifications/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewayportalBE1B3F41": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewayportalEBE75ADB",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Rewrite": Object {
                "Prefix": Object {
                  "Value": "/portal/",
                },
              },
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "PortalVirtualServiceCAAE389C",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/portal/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GatewayVirtualGatewaysso191DBA87": Object {
      "Properties": Object {
        "GatewayRouteName": "testGatewayVirtualGatewaysso4414F987",
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "Rewrite": Object {
                "Prefix": Object {
                  "Value": "/sso/",
                },
              },
              "Target": Object {
                "VirtualService": Object {
                  "VirtualServiceName": Object {
                    "Fn::GetAtt": Array [
                      "SSOVirtualServiceEBB83FA3",
                      "VirtualServiceName",
                    ],
                  },
                },
              },
            },
            "Match": Object {
              "Prefix": "/sso/",
            },
          },
        },
        "VirtualGatewayName": Object {
          "Fn::GetAtt": Array [
            "GatewayVirtualGatewayDD1BDA9D",
            "VirtualGatewayName",
          ],
        },
      },
      "Type": "AWS::AppMesh::GatewayRoute",
    },
    "GlobalSettingsD48A6D36": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "[Bitwarden] Environment Variables",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "internalIdentityKey",
          "PasswordLength": 64,
          "SecretStringTemplate": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{\\"sqlServer__connectionString\\":\\"Data Source=tcp:",
                Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
                ",",
                Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Port",
                  ],
                },
                ";Initial Catalog=vault;Persist Security Info=False;User ID={{resolve:secretsmanager:",
                Object {
                  "Ref": "DatabaseInstanceSecretAttachmentF5C7BAE8",
                },
                ":SecretString:username::}};Password={{resolve:secretsmanager:",
                Object {
                  "Ref": "DatabaseInstanceSecretAttachmentF5C7BAE8",
                },
                ":SecretString:password::}};MultipleActiveResultSets=False;Connect Timeout=30;Encrypt=True;TrustServerCertificate=True\\",\\"installation__id\\":\\"783b5a89-5ccd-436e-9893-ad3a0047b8d3\\",\\"installation__key\\":\\"G1CgBGSkUWIeiygk0gkY\\",\\"yubico__clientId\\":\\"REPLACE\\",\\"yubico__key\\":\\"REPLACE\\",\\"disableUserRegistration\\":false,\\"hibpApiKey\\":\\"REPLACE\\",\\"admins\\":\\"mats.kazuki@gmail.com\\"}",
              ],
            ],
          },
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "IconsDefaultServiceCloudmapService6FF93FF0": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.icons.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "IconsDefaultServiceD1C4F8F7": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "IconsDefaultServiceCloudmapService6FF93FF0",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "IconsTaskDefinition8C9D6868",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "IconsDummyService05DCF7E0": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "icons.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "IconsDummyServiceDummyInstanceE1367C8F": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testIconsDummyServiceDummyInstance4866AD22",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "IconsDummyService05DCF7E0",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "IconsTaskDefinition8C9D6868": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/icons:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "icons",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "icons",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/icons/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "icons",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "IconsVirtualNode4116295A",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "icons",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "IconsTaskExecutionRole13C34103",
            "Arn",
          ],
        },
        "Family": "testIconsTaskDefinition5AC7AB90",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "IconsTaskRole3578098F",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "IconsTaskExecutionRole13C34103": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IconsTaskExecutionRoleDefaultPolicyBC4BEA2A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IconsTaskExecutionRoleDefaultPolicyBC4BEA2A",
        "Roles": Array [
          Object {
            "Ref": "IconsTaskExecutionRole13C34103",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IconsTaskRole3578098F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IconsVirtualNode4116295A": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "IconsDefaultServiceCloudmapService6FF93FF0",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "icons-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "IconsVirtualRouter8CB80B66": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testIconsVirtualRouter6CAEE7C3",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "IconsVirtualRouterDefaultRoute170526A3": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "IconsVirtualNode4116295A",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "IconsVirtualRouter8CB80B66",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "IconsVirtualService4A2842F5": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "IconsVirtualRouter8CB80B66",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "icons.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "IdentityAccessPoint07BDBDDD": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "FileSystem8A8E25C0",
        },
        "PosixUser": Object {
          "Gid": "1000",
          "Uid": "1000",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1000",
            "OwnerUid": "1000",
            "Permissions": "0755",
          },
          "Path": "/bitwarden/identity",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "IdentityDefaultService5D9F2C5B": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "IdentityDefaultServiceCloudmapServiceE5DAB135",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "IdentityTaskDefinition24B337AE",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "IdentityDefaultServiceCloudmapServiceE5DAB135": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.identity.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "IdentityDummyService951DD6F5": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "identity.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "IdentityDummyServiceDummyInstance263822B9": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testIdentityDummyServiceDummyInstance5229529A",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "IdentityDummyService951DD6F5",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "IdentityServerCertificateBuild3B361118": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "IdentityServerCertificateBuildCustomResourcePolicy83B1478C",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"CodeBuild\\",\\"action\\":\\"startBuild\\",\\"parameters\\":{\\"projectName\\":\\"",
              Object {
                "Ref": "IdentityServerCertificateBuildProjectBD0EF4F6",
              },
              "\\",\\"sourceTypeOverride\\":\\"S3\\",\\"sourceLocationOverride\\":\\"cdk-hnb659fds-assets-123456789012-us-west-2/abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216.zip\\",\\"idempotencyToken\\":\\"abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216\\"},\\"physicalResourceId\\":{\\"responsePath\\":\\"build.arn\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"CodeBuild\\",\\"action\\":\\"startBuild\\",\\"parameters\\":{\\"projectName\\":\\"",
              Object {
                "Ref": "IdentityServerCertificateBuildProjectBD0EF4F6",
              },
              "\\",\\"sourceTypeOverride\\":\\"S3\\",\\"sourceLocationOverride\\":\\"cdk-hnb659fds-assets-123456789012-us-west-2/abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216.zip\\",\\"idempotencyToken\\":\\"abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216\\"},\\"physicalResourceId\\":{\\"responsePath\\":\\"build.arn\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityServerCertificateBuildCustomResourcePolicy83B1478C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdentityServerCertificateBuildCustomResourcePolicy83B1478C",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdentityServerCertificateBuildProjectBD0EF4F6": Object {
      "DependsOn": Array [
        "IdentityServerCertificateBuildProjectPolicyDocumentD933977F",
      ],
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "[Bitwarden] Generate identity certificate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "LOCAL_UID",
              "Type": "PLAINTEXT",
              "Value": "1000",
            },
            Object {
              "Name": "LOCAL_GID",
              "Type": "PLAINTEXT",
              "Value": "1000",
            },
            Object {
              "Name": "IDENTITY_CERT_PASSWORD",
              "Type": "SECRETS_MANAGER",
              "Value": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "FileSystemLocations": Array [
          Object {
            "Identifier": "efs",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "FileSystem8A8E25C0",
                  },
                  ".efs.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com:/",
                ],
              ],
            },
            "MountPoint": "/mnt",
            "Type": "EFS",
          },
        ],
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "IdentityServerCertificateBuildProjectRoleC744AC1A",
            "Arn",
          ],
        },
        "Source": Object {
          "Location": "cdk-hnb659fds-assets-123456789012-us-west-2/abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216.zip",
          "Type": "S3",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "IdentityServerCertificateBuildProjectSecurityGroupE5E785CC",
                "GroupId",
              ],
            },
          ],
          "Subnets": Array [
            Object {
              "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
            },
            Object {
              "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
            },
            Object {
              "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
            },
          ],
          "VpcId": Object {
            "Ref": "VPCB9E5F0B4",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "IdentityServerCertificateBuildProjectPolicyDocumentD933977F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdentityServerCertificateBuildProjectPolicyDocumentD933977F",
        "Roles": Array [
          Object {
            "Ref": "IdentityServerCertificateBuildProjectRoleC744AC1A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdentityServerCertificateBuildProjectRoleC744AC1A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityServerCertificateBuildProjectRoleDefaultPolicy89174DC5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-west-2",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-west-2/abb383aa7ac67661ff64ae0a217f7fd6edcf4ba87ab1395360b21b210a338216.zip",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": Object {
                "StringEquals": Object {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          Object {
                            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          Object {
                            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          Object {
                            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-west-2:123456789012:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "IdentityServerCertificateBuildProjectBD0EF4F6",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-west-2:123456789012:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "IdentityServerCertificateBuildProjectBD0EF4F6",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:us-west-2:123456789012:report-group/",
                    Object {
                      "Ref": "IdentityServerCertificateBuildProjectBD0EF4F6",
                    },
                    "-*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdentityServerCertificateBuildProjectRoleDefaultPolicy89174DC5",
        "Roles": Array [
          Object {
            "Ref": "IdentityServerCertificateBuildProjectRoleC744AC1A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdentityServerCertificateBuildProjectSecurityGroupE5E785CC": Object {
      "Properties": Object {
        "GroupDescription": "Automatic generated security group for CodeBuild testIdentityServerCertificateBuildProjectD5F93639",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "IdentityServerCertificatePassword04BFE426": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "[Bitwarden] Identity Server Certificate Password",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "PasswordLength": 32,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityTaskDefinition24B337AE": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/.well-known/openid-configuration || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/identity:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "identity",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              Object {
                "ContainerPath": "/etc/bitwarden/identity",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "IdentityAccessPoint07BDBDDD",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "identity",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/identity/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "identity",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "IdentityVirtualNodeFDB39928",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "identity",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "IdentityTaskExecutionRoleC945310A",
            "Arn",
          ],
        },
        "Family": "testIdentityTaskDefinition6EAA711C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "IdentityTaskRoleD565E174",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "IdentityAccessPoint07BDBDDD",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "IdentityAccessPoint07BDBDDD",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "IdentityTaskExecutionRoleC945310A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityTaskExecutionRoleDefaultPolicy44894269": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdentityTaskExecutionRoleDefaultPolicy44894269",
        "Roles": Array [
          Object {
            "Ref": "IdentityTaskExecutionRoleC945310A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdentityTaskRoleD565E174": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityVirtualNodeFDB39928": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "IdentityDefaultServiceCloudmapServiceE5DAB135",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "identity-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "IdentityVirtualRouter8669DCCA": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testIdentityVirtualRouterD2C53A8B",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "IdentityVirtualRouterDefaultRouteB55B7311": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "IdentityVirtualNodeFDB39928",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "IdentityVirtualRouter8669DCCA",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "IdentityVirtualService0981AD18": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "IdentityVirtualRouter8669DCCA",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "identity.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "LoadBalancerBE9EEC3A": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerSecurityGroupA28D6DD7",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          Object {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
          Object {
            "Ref": "VPCPublicSubnet3Subnet631C5E25",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerListnerA3235EC5": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroup3D7CD9B8",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerBE9EEC3A",
        },
        "Port": 8080,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerListnerappidRule9910DCC2": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "FixedResponseConfig": Object {
              "ContentType": "application/json",
              "MessageBody": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "{\\"trustedFacets\\":[{\\"version\\":{\\"major\\":1,\\"minor\\":0},\\"ids\\":[\\"https://",
                    Object {
                      "Fn::GetAtt": Array [
                        "Distribution830FAC52",
                        "DomainName",
                      ],
                    },
                    "\\",\\"ios:bundle-id:com.8bit.bitwarden\\",\\"android:apk-key-hash:dUGFzUzf3lmHSLBDBIv+WaFyZMI\\"]}]}",
                  ],
                ],
              },
              "StatusCode": "200",
            },
            "Type": "fixed-response",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "PathPatternConfig": Object {
              "Values": Array [
                "/app-id.json",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "LoadBalancerListnerA3235EC5",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LoadBalancerSecurityGroupA28D6DD7": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB testLoadBalancerF5615F9C",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 8080",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerSecurityGrouptotestGatewayServiceSecurityGroup22E0A34E8080DA276DE7": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GatewayServiceSecurityGroupBF5A4109",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerSecurityGroupA28D6DD7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerSecurityGrouptotestGatewayServiceSecurityGroup22E0A34E990136277FB4": Object {
      "Properties": Object {
        "Description": "for HealthCheck",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GatewayServiceSecurityGroupBF5A4109",
            "GroupId",
          ],
        },
        "FromPort": 9901,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerSecurityGroupA28D6DD7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9901,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "NotificationsDefaultService213569C8": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "NotificationsDefaultServiceCloudmapServiceB97ABB2D",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "NotificationsTaskDefinition4817B1A3",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "NotificationsDefaultServiceCloudmapServiceB97ABB2D": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.notifications.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "NotificationsDummyServiceDFD30E1D": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "notifications.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "NotificationsDummyServiceDummyInstance001DA901": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testNotificationsDummyServiceDummyInstance8EF6390F",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "NotificationsDummyServiceDFD30E1D",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "NotificationsTaskDefinition4817B1A3": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/notifications:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "notifications",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "notifications",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/notifications/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "notifications",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "NotificationsVirtualNodeCE8CB137",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "notifications",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "NotificationsTaskExecutionRole17C39EB0",
            "Arn",
          ],
        },
        "Family": "testNotificationsTaskDefinitionC6C78C24",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "NotificationsTaskRole4190AD19",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "NotificationsTaskExecutionRole17C39EB0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NotificationsTaskExecutionRoleDefaultPolicy48C504DD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NotificationsTaskExecutionRoleDefaultPolicy48C504DD",
        "Roles": Array [
          Object {
            "Ref": "NotificationsTaskExecutionRole17C39EB0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NotificationsTaskRole4190AD19": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NotificationsVirtualNodeCE8CB137": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "email-smtp.us-west-2.amazonaws.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "push.bitwarden.com",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "NotificationsDefaultServiceCloudmapServiceB97ABB2D",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "notifications-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "NotificationsVirtualRouter61EB6903": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testNotificationsVirtualRouterC3FEFC3B",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "NotificationsVirtualRouterDefaultRoute43C18739": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "NotificationsVirtualNodeCE8CB137",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "NotificationsVirtualRouter61EB6903",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "NotificationsVirtualService853F0457": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "NotificationsVirtualRouter61EB6903",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "notifications.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "OidcIdentityClientKey1B84FFF1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "[Bitwarden] A randomly generated OpenID Connect client key.",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "PasswordLength": 64,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "PortalDefaultService40C3B1CF": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "PortalDefaultServiceCloudmapServiceDA9EDA14",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "PortalTaskDefinitionC7CEC116",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "PortalDefaultServiceCloudmapServiceDA9EDA14": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.portal.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "PortalDummyService0C87BF8F": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "portal.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "PortalDummyServiceDummyInstanceC6716AA7": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testPortalDummyServiceDummyInstance23E3AB25",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "PortalDummyService0C87BF8F",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "PortalTaskDefinitionC7CEC116": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/portal:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "portal",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "portal",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/portal/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "portal",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "PortalVirtualNode3ED3514D",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "portal",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "PortalTaskExecutionRoleC406592F",
            "Arn",
          ],
        },
        "Family": "testPortalTaskDefinitionE96CCD3C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "PortalTaskRole6F8B82A2",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "PortalTaskExecutionRoleC406592F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PortalTaskExecutionRoleDefaultPolicy87F8E5C9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PortalTaskExecutionRoleDefaultPolicy87F8E5C9",
        "Roles": Array [
          Object {
            "Ref": "PortalTaskExecutionRoleC406592F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PortalTaskRole6F8B82A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PortalVirtualNode3ED3514D": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "PortalDefaultServiceCloudmapServiceDA9EDA14",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "portal-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "PortalVirtualRouterDefaultRoute6E728D79": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "PortalVirtualNode3ED3514D",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "PortalVirtualRouterEBDD4BBA",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "PortalVirtualRouterEBDD4BBA": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testPortalVirtualRouter86AC6702",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "PortalVirtualServiceCAAE389C": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "PortalVirtualRouterEBDD4BBA",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "portal.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "PushDefaultVirtualNodeC9FA7FC0": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 443,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "DNS": Object {
              "Hostname": Object {
                "Fn::GetAtt": Array [
                  "PushVirtualServiceAC7A0249",
                  "VirtualServiceName",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "testPushDefaultVirtualNodeCF3E4EA1",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "PushVirtualRouter5D48C625": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 443,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testPushVirtualRouter5C04D47E",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "PushVirtualRouterDefaultRouteC11E0A55": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "PushDefaultVirtualNodeC9FA7FC0",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "PushVirtualRouter5D48C625",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "PushVirtualServiceAC7A0249": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "PushVirtualRouter5D48C625",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "push.bitwarden.com",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "SSODefaultServiceCloudmapServiceFEC69BF0": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.sso.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "SSODefaultServiceEB03B436": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "SSODefaultServiceCloudmapServiceFEC69BF0",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "SSOTaskDefinitionC2E7DA59",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SSODummyService0E860274": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "sso.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "SSODummyServiceDummyInstanceFB56A0C9": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testSSODummyServiceDummyInstance78C302DB",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "SSODummyService0E860274",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "SSOTaskDefinitionC2E7DA59": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/alive || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/sso:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "sso",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
              Object {
                "ContainerPath": "/etc/bitwarden/core",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              Object {
                "ContainerPath": "/etc/bitwarden/identity",
                "ReadOnly": false,
                "SourceVolume": Object {
                  "Ref": "IdentityAccessPoint07BDBDDD",
                },
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "globalSettings__sqlServer__connectionString",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":sqlServer__connectionString::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__internalIdentityKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":internalIdentityKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__identityServer__certificatePassword",
                "ValueFrom": Object {
                  "Ref": "IdentityServerCertificatePassword04BFE426",
                },
              },
              Object {
                "Name": "globalSettings__oidcIdentityClientKey",
                "ValueFrom": Object {
                  "Ref": "OidcIdentityClientKey1B84FFF1",
                },
              },
              Object {
                "Name": "globalSettings__duo__aKey",
                "ValueFrom": Object {
                  "Ref": "DuoAKey23F55117",
                },
              },
              Object {
                "Name": "globalSettings__installation__id",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__id::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__installation__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":installation__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__clientId",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__clientId::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__yubico__key",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":yubico__key::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__disableUserRegistration",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":disableUserRegistration::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__hibpApiKey",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":hibpApiKey::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "adminSettings__admins",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "GlobalSettingsD48A6D36",
                      },
                      ":admins::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "sso",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/sso/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "sso",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "SSOVirtualNode2D024E53",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "sso",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SSOTaskExecutionRole49570EC2",
            "Arn",
          ],
        },
        "Family": "testSSOTaskDefinition3F75EE57",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "SSOTaskRole29AA3716",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "CoreAccessPoint2A4FF513",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "CoreAccessPoint2A4FF513",
            },
          },
          Object {
            "EfsVolumeConfiguration": Object {
              "AuthorizationConfig": Object {
                "AccessPointId": Object {
                  "Ref": "IdentityAccessPoint07BDBDDD",
                },
              },
              "FileSystemId": Object {
                "Ref": "FileSystem8A8E25C0",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": Object {
              "Ref": "IdentityAccessPoint07BDBDDD",
            },
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SSOTaskExecutionRole49570EC2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SSOTaskExecutionRoleDefaultPolicy193F9435": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GlobalSettingsD48A6D36",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IdentityServerCertificatePassword04BFE426",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "OidcIdentityClientKey1B84FFF1",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DuoAKey23F55117",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SSOTaskExecutionRoleDefaultPolicy193F9435",
        "Roles": Array [
          Object {
            "Ref": "SSOTaskExecutionRole49570EC2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSOTaskRole29AA3716": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SSOVirtualNode2D024E53": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Backends": Array [
            Object {
              "VirtualService": Object {
                "VirtualServiceName": Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInstance24D16791",
                    "Endpoint.Address",
                  ],
                },
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "web.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "api.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "notifications.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "identity.svc.bitwarden.local",
              },
            },
            Object {
              "VirtualService": Object {
                "VirtualServiceName": "admin.svc.bitwarden.local",
              },
            },
          ],
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "SSODefaultServiceCloudmapServiceFEC69BF0",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "sso-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "SSOVirtualRouter85791753": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testSSOVirtualRouter3E3E001D",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "SSOVirtualRouterDefaultRoute328B35D4": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "SSOVirtualNode2D024E53",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "SSOVirtualRouter85791753",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "SSOVirtualServiceEBB83FA3": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "SSOVirtualRouter85791753",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "sso.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "TargetGroup3D7CD9B8": Object {
      "Properties": Object {
        "HealthCheckPath": "/server_info",
        "HealthCheckPort": "9901",
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WebDefaultServiceC23ED331": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE",
            "Weight": 0,
          },
          Object {
            "Base": 0,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "AppCluster68CC0559",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": true,
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AppSecurityGroupC292657D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "WebDefaultServiceCloudmapService09933A9B",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "WebTaskDefinitionD1709B1C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "WebDefaultServiceCloudmapService09933A9B": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 2,
        },
        "Name": "latest.web.node",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "WebDummyService2E0E5AD7": Object {
      "Properties": Object {
        "Description": "The dummy for App Mesh",
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "web.svc",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "AppClusterDefaultServiceDiscoveryNamespaceD10811B1",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "WebDummyServiceDummyInstanceB4E5FB30": Object {
      "Properties": Object {
        "InstanceAttributes": Object {
          "AWS_INSTANCE_IPV4": "10.10.10.10",
          "AWS_INSTANCE_PORT": "80",
        },
        "InstanceId": "testWebDummyServiceDummyInstanceB301752A",
        "ServiceId": Object {
          "Fn::GetAtt": Array [
            "WebDummyService2E0E5AD7",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Instance",
    },
    "WebTaskDefinitionD1709B1C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 128,
            "DependsOn": Array [
              Object {
                "Condition": "HEALTHY",
                "ContainerName": "envoy",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "LOCAL_UID",
                "Value": "1000",
              },
              Object {
                "Name": "LOCAL_GID",
                "Value": "1000",
              },
              Object {
                "Name": "ASPNETCORE_ENVIRONMENT",
                "Value": "Production",
              },
              Object {
                "Name": "globalSettings__selfHosted",
                "Value": "true",
              },
              Object {
                "Name": "globalSettings__pushRelayBaseUri",
                "Value": "https://push.bitwarden.com",
              },
              Object {
                "Name": "globalSettings__attachment__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments",
              },
              Object {
                "Name": "globalSettings__send__baseDirectory",
                "Value": "/etc/bitwarden/core/attachments/send",
              },
              Object {
                "Name": "globalSettings__dataProtection__directory",
                "Value": "/etc/bitwarden/core/aspnet-dataprotection",
              },
              Object {
                "Name": "globalSettings__attachment__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__send__baseUrl",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/attachments/send",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__vault",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__api",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/api",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__notifications",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/notifications",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__identity",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/identity",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__admin",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "Distribution830FAC52",
                          "DomainName",
                        ],
                      },
                      "/admin",
                    ],
                  ],
                },
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalVault",
                "Value": "http://web.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalApi",
                "Value": "http://api.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalNotifications",
                "Value": "http://notifications.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalIdentity",
                "Value": "http://identity.svc.bitwarden.local:5000",
              },
              Object {
                "Name": "globalSettings__baseServiceUri__internalAdmin",
                "Value": "http://admin.svc.bitwarden.local:5000",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -f http://localhost:5000/ || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 20,
              "Timeout": 3,
            },
            "Image": "983035974902.dkr.ecr.us-west-2.amazonaws.com/bitwarden/web:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "web",
              },
            },
            "MemoryReservation": 256,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
          },
          Object {
            "Cpu": 16,
            "Essential": true,
            "Image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "web",
              },
            },
            "MemoryReservation": 64,
            "Name": "xray-daemon",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2000,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 32,
            "Environment": Array [
              Object {
                "Name": "CW_CONFIG_CONTENT",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "{\\"metrics\\":{\\"namespace\\":\\"AppMesh/Envoy/StatsD\\",\\"metrics_collected\\":{\\"statsd\\":{\\"metrics_aggregation_interval\\":0}}},\\"logs\\":{\\"logs_collected\\":{\\"files\\":{\\"collect_list\\":[{\\"file_path\\":\\"/etc/bitwarden/logs/**.txt\\",\\"auto_removal\\":true,\\"log_group_name\\":\\"",
                      Object {
                        "Ref": "AppLogGroupC72EEC8C",
                      },
                      "\\",\\"log_stream_name\\":\\"bitwarden/logs/web/{hostname}\\",\\"timestamp_format\\":\\"%Y-%m-%d %H:%M:%S.\\",\\"timezone\\":\\"UTC\\"}]}}}}",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "web",
              },
            },
            "MemoryReservation": 64,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/etc/bitwarden/logs/",
                "ReadOnly": false,
                "SourceVolume": "LogVolume",
              },
            ],
            "Name": "cw-agent",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8125,
                "Protocol": "udp",
              },
            ],
          },
          Object {
            "Cpu": 80,
            "Environment": Array [
              Object {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "mesh/",
                      Object {
                        "Fn::GetAtt": Array [
                          "AppMesh01F34EF4",
                          "MeshName",
                        ],
                      },
                      "/virtualNode/",
                      Object {
                        "Fn::GetAtt": Array [
                          "WebVirtualNode4AAD1E02",
                          "VirtualNodeName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "AWS_REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1",
              },
              Object {
                "Name": "ENABLE_ENVOY_XRAY_TRACING",
                "Value": "1",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE",
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2,
            },
            "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.18.3.0-prod",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroupC72EEC8C",
                },
                "awslogs-region": "us-west-2",
                "awslogs-stream-prefix": "web",
              },
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": Array [
              Object {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000,
              },
            ],
            "User": "1337",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "WebTaskExecutionRoleC89ED533",
            "Arn",
          ],
        },
        "Family": "testWebTaskDefinitionA348A6A4",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": Object {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": Array [
            Object {
              "Name": "IgnoredUID",
              "Value": "1337",
            },
            Object {
              "Name": "IgnoredGID",
              "Value": "1338",
            },
            Object {
              "Name": "AppPorts",
              "Value": "5000",
            },
            Object {
              "Name": "ProxyIngressPort",
              "Value": "15000",
            },
            Object {
              "Name": "ProxyEgressPort",
              "Value": "15001",
            },
            Object {
              "Name": "EgressIgnoredPorts",
              "Value": "2049",
            },
            Object {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254",
            },
          ],
          "Type": "APPMESH",
        },
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "WebTaskRoleA0C52095",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Name": "LogVolume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "WebTaskExecutionRoleC89ED533": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebTaskExecutionRoleDefaultPolicy024C11E6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroupC72EEC8C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebTaskExecutionRoleDefaultPolicy024C11E6",
        "Roles": Array [
          Object {
            "Ref": "WebTaskExecutionRoleC89ED533",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebTaskRoleA0C52095": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
          "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebVirtualNode4AAD1E02": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "ConnectionPool": Object {
                "HTTP": Object {
                  "MaxConnections": 1024,
                  "MaxPendingRequests": 1024,
                },
              },
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
          "Logging": Object {
            "AccessLog": Object {
              "File": Object {
                "Path": "/dev/stdout",
              },
            },
          },
          "ServiceDiscovery": Object {
            "AWSCloudMap": Object {
              "NamespaceName": "bitwarden.local",
              "ServiceName": Object {
                "Fn::GetAtt": Array [
                  "WebDefaultServiceCloudmapService09933A9B",
                  "Name",
                ],
              },
            },
          },
        },
        "VirtualNodeName": "web-latest",
      },
      "Type": "AWS::AppMesh::VirtualNode",
    },
    "WebVirtualRouter477E8F2E": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Listeners": Array [
            Object {
              "PortMapping": Object {
                "Port": 5000,
                "Protocol": "http",
              },
            },
          ],
        },
        "VirtualRouterName": "testWebVirtualRouter098C5F05",
      },
      "Type": "AWS::AppMesh::VirtualRouter",
    },
    "WebVirtualRouterDefaultRouteF259E01F": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "RouteName": "DefaultRoute",
        "Spec": Object {
          "HttpRoute": Object {
            "Action": Object {
              "WeightedTargets": Array [
                Object {
                  "VirtualNode": Object {
                    "Fn::GetAtt": Array [
                      "WebVirtualNode4AAD1E02",
                      "VirtualNodeName",
                    ],
                  },
                  "Weight": 1,
                },
              ],
            },
            "Match": Object {
              "Prefix": "/",
            },
          },
        },
        "VirtualRouterName": Object {
          "Fn::GetAtt": Array [
            "WebVirtualRouter477E8F2E",
            "VirtualRouterName",
          ],
        },
      },
      "Type": "AWS::AppMesh::Route",
    },
    "WebVirtualService8E478A2D": Object {
      "Properties": Object {
        "MeshName": Object {
          "Fn::GetAtt": Array [
            "AppMesh01F34EF4",
            "MeshName",
          ],
        },
        "Spec": Object {
          "Provider": Object {
            "VirtualRouter": Object {
              "VirtualRouterName": Object {
                "Fn::GetAtt": Array [
                  "WebVirtualRouter477E8F2E",
                  "VirtualRouterName",
                ],
              },
            },
          },
        },
        "VirtualServiceName": "web.svc.bitwarden.local",
      },
      "Type": "AWS::AppMesh::VirtualService",
    },
    "testDatabaseInstanceSecret7C71F07D3fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"sa\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
